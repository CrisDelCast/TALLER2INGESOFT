name: Release Process

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Generate Release Notes
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Test
        run: |
          chmod +x ./mvnw
          ./mvnw clean package

      - name: Set Docker Image Name
        run: echo "IMAGE_TAG=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]'):${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Build Docker Images
        run: docker build -t ${{ env.IMAGE_TAG }} .

      - name: Deploy to Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          LOWERCASE_DEPLOYMENT_NAME=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')
          kubectl set image deployment/${LOWERCASE_DEPLOYMENT_NAME} ${LOWERCASE_DEPLOYMENT_NAME}=${{ env.IMAGE_TAG }} -n ecommerce
          kubectl rollout status deployment/${LOWERCASE_DEPLOYMENT_NAME} -n ecommerce